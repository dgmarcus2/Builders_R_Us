

CREATE SEQUENCE "DGMARCU2"."DMAS5_PERSON_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."DMAS5_SUPPLIER_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."DMAS5_PROJECT_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."DMAS5_RESOURCE_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE "DGMARCU2"."DMAS5_JOB_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 1;





CREATE TABLE "DGMARCU2"."DMAS5_PERSON"
  (
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    "EMAIL" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "FNAME" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "LNAME" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "STREET_NM" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "STREET_NUM" VARCHAR2(10 BYTE) NOT NULL ENABLE,
    "CITY" VARCHAR2(200 BYTE) NOT NULL ENABLE,
    "STATE" CHAR(2 BYTE) NOT NULL ENABLE,
    "ZIP" VARCHAR(10 BYTE) NOT NULL ENABLE,
    "HOME_PHONE" VARCHAR2(10 BYTE),
    "WORK_PHONE" VARCHAR2(10 BYTE),
    CONSTRAINT "DMAS5_PERSON_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
    CONSTRAINT "DMAS5_PERSON_HOME_PHONE_CHK1" CHECK (REGEXP_LIKE(HOME_PHONE, '[0-9]{3}-?[0-9]{3}-?[0-9]{4}')) ENABLE,
    CONSTRAINT "DMAS5_PERSON_WORK_PHONE_CHK1" CHECK (REGEXP_LIKE(WORK_PHONE, '[0-9]{3}-?[0-9]{3}-?[0-9]{4}')) ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_PERSON"."STATE" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_PERSON"."ZIP" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_PERSON"."WORK_PHONE" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_PERSON"."HOME_PHONE" IS 'ASSUMING ALL CLIENTS RESIDE WITHIN THE UNITED STATES';

  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."DMAS5_PERSON_TRIG1"
   BEFORE INSERT ON DMAS5_PERSON
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.PERSON_ID IS NULL )
   THEN
    :NEW.PERSON_ID := DMAS5_PERSON_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."DMAS5_PERSON_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."DMAS5_EMPLOYEE"
  (
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    "START_DT" DATE NOT NULL ENABLE,
    "BIRTH_DT" DATE NOT NULL ENABLE,
    "IS_CURRENT" CHAR(2 BYTE) NOT NULL ENABLE,
    "END_DT" DATE,
    CONSTRAINT "DMAS5_EMPLOYEE_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
    CONSTRAINT "DMAS5_EMPLOYEE_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_PERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_EMPLOYEE"."IS_CURRENT" IS 'FUNCTIONS AS BOOLEAN. ACCEPTABLE ANSWERS: Y N ';





CREATE TABLE "DGMARCU2"."DMAS5_CUSTOMER"
  (
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_CUSTOMER_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
    CONSTRAINT "DMAS5_CUSTOMER_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_PERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE
  );




CREATE TABLE "DGMARCU2"."DMAS5_PRIMARY_CONTACT"
  (
    "ASSIGN_DT" DATE NOT NULL ENABLE,
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE,
    "EMPLOYEE_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_PRIMARY_CONTACT_PK" PRIMARY KEY ("CUSTOMER_ID", "EMPLOYEE_ID") ENABLE,
    CONSTRAINT "DMAS5_PRIMARY_CONTACT_FK1" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DGMARCU2"."DMAS5_CUSTOMER" ("PERSON_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_PRIMARY_CONTACT_FK2" FOREIGN KEY ("EMPLOYEE_ID") REFERENCES "DGMARCU2"."DMAS5_EMPLOYEE" ("PERSON_ID") ON DELETE CASCADE ENABLE
  );




CREATE TABLE "DGMARCU2"."DMAS5_CORPORATE"
  (
    "DISCOUNT_RATE" FLOAT NOT NULL ENABLE,
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_CORPORATE_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
    CONSTRAINT "DMAS5_CORPORATE_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_PERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE
  );

CREATE TABLE "DGMARCU2"."DMAS5_RESIDENTIAL"
  (
    "BIRTH_DT" DATE NOT NULL ENABLE, /*MAKE NULLABLE??*/
    "MARKET_SECTOR" VARCHAR2(300 BYTE),
    "AGE" NUMBER,
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_RESIDENTIAL_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
    CONSTRAINT "DMAS5_RESIDENTIAL_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_PERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE
  );



CREATE TABLE "DGMARCU2"."DMAS5_SUPPLIER"
  (
    "SUPPLIER_ID" NUMBER NOT NULL ENABLE,
    "SUPPLIER_NM" VARCHAR2(300 BYTE) NOT NULL ENABLE,
    "IS_PREFERRED" VARCHAR2(1 BYTE),
    CONSTRAINT "DMAS5_SUPPLIER_PK" PRIMARY KEY ("SUPPLIER_ID") ENABLE,
    CONSTRAINT "DMAS5_IS_PREFERRED_CHK1" CHECK (IS_PREFERRED IN ('Y', 'N')) ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_SUPPLIER"."IS_PREFERRED" IS 'FUNCTIONS AS BOOLEAN. ACCEPTABLE ANSWERS: Y N ';

  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."DMAS5_SUPPLIER_TRIG1"
   BEFORE INSERT ON DMAS5_SUPPLIER
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.SUPPLIER_ID IS NULL )
   THEN
    :NEW.SUPPLIER_ID := DMAS5_SUPPLIER_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."DMAS5_SUPPLIER_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."DMAS5_CONTACT"
  (
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    "SUPPLIER_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_CONTACT_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
    CONSTRAINT "DMAS5_CONTACT_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_PERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_CONTACT_FK2" FOREIGN KEY ("SUPPLIER_ID") REFERENCES "DGMARCU2"."DMAS5_SUPPLIER" ("SUPPLIER_ID") ON DELETE CASCADE ENABLE
  );




CREATE TABLE "DGMARCU2"."DMAS5_PROJECT"
  (
    "PROJECT_ID" NUMBER NOT NULL ENABLE,
    "CREATE_DT" DATE NOT NULL ENABLE,
    "DESCRIPTION" VARCHAR2(4000 BYTE),
    "IS_INSIDE" VARCHAR2(1 BYTE) NOT NULL ENABLE,
    "CUSTOMER_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_PROJECT_PK" PRIMARY KEY ("PROJECT_ID") ENABLE,
    CONSTRAINT "DMAS5_PROJECT_FK1" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "DGMARCU2"."DMAS5_CUSTOMER" ("PERSON_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_IS_INSIDE_CHK1" CHECK (IS_INSIDE IN ('Y', 'N')) ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_PROJECT"."IS_INSIDE" IS 'FUNCTIONS AS BOOLEAN. ACCEPTABLE ANSWERS: Y N ';

  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."DMAS5_PROJECT_TRIG1"
   BEFORE INSERT ON DMAS5_PROJECT
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.PROJECT_ID IS NULL )
   THEN
    :NEW.PROJECT_ID := DMAS5_PROJECT_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."DMAS5_PROJECT_TRIG1" ENABLE;



CREATE TABLE "DGMARCU2"."DMAS5_PROJECT_LOCATION"
  (
    "PROJECT_ID" NUMBER NOT NULL ENABLE,
    "LOCATION" VARCHAR2(200 BYTE) NOT NULL ENABLE,
    CONSTRAINT "DMAS5_PROJECT_LOCATION_PK" PRIMARY KEY ("PROJECT_ID", "LOCATION") ENABLE,
    CONSTRAINT "DMAS5_PROJECT_LOCATION_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "DGMARCU2"."DMAS5_PROJECT" ("PROJECT_ID") ON DELETE CASCADE ENABLE
  );



CREATE TABLE "DGMARCU2"."DMAS5_PART_OF"
  (
    "SUBPROJECT_OF" NUMBER NOT NULL ENABLE,
    "OVERARCHING_PROJECT" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_PART_OF" PRIMARY KEY ("SUBPROJECT_OF","OVERARCHING_PROJECT") ENABLE,
    CONSTRAINT "DMAS5_PART_OF_FK1" FOREIGN KEY ("SUBPROJECT_OF") REFERENCES "DGMARCU2"."DMAS5_PROJECT" ("PROJECT_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_PART_OF_FK2" FOREIGN KEY ("OVERARCHING_PROJECT") REFERENCES "DGMARCU2"."DMAS5_PROJECT" ("PROJECT_ID") ON DELETE CASCADE ENABLE
  );



CREATE TABLE "DGMARCU2"."DMAS5_TRADESPERSON"
  (
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_TRADESPERSON_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
    CONSTRAINT "DMAS5_TRADESPERSON_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_PERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE
  );



CREATE TABLE "DGMARCU2"."DMAS5_RESOURCE"
 (
   "RESOURCE_ID" NUMBER NOT NULL ENABLE,
   "DESCRIPTION" VARCHAR2(4000 BYTE) NOT NULL ENABLE,
   CONSTRAINT "DMAS5_RESOURCE_PK" PRIMARY KEY ("RESOURCE_ID") ENABLE
 );

 CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."DMAS5_RESOURCE_TRIG1"
  BEFORE INSERT ON DMAS5_RESOURCE
  FOR EACH ROW
 DECLARE
 BEGIN
  IF( :NEW.RESOURCE_ID IS NULL )
  THEN
   :NEW.RESOURCE_ID := DMAS5_RESOURCE_ID_SEQ.NEXTVAL;
  END IF;
 END;
 /
 ALTER TRIGGER "DGMARCU2"."DMAS5_RESOURCE_TRIG1" ENABLE;




 CREATE TABLE "DGMARCU2"."DMAS5_REQUIRES"
   (
     "PROJECT_ID" NUMBER NOT NULL ENABLE,
     "RESOURCE_ID" NUMBER NOT NULL ENABLE,
     CONSTRAINT "DMAS5_REQUIRES_PK" PRIMARY KEY ("PROJECT_ID", "RESOURCE_ID") ENABLE,
     CONSTRAINT "DMAS5_REQUIRES_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "DGMARCU2"."DMAS5_PROJECT" ("PROJECT_ID") ON DELETE CASCADE ENABLE,
     CONSTRAINT "DMAS5_REQUIRES_FK2" FOREIGN KEY ("RESOURCE_ID") REFERENCES "DGMARCU2"."DMAS5_RESOURCE" ("RESOURCE_ID") ON DELETE CASCADE ENABLE
   );




 CREATE TABLE "DGMARCU2"."DMAS5_SERVICE"
   (
     "RESOURCE_ID" NUMBER NOT NULL ENABLE,
     "SERVICE_SHORT_NM" VARCHAR2(300 BYTE) NOT NULL ENABLE,
     CONSTRAINT "DMAS5_SERVICE_PK" PRIMARY KEY ("RESOURCE_ID") ENABLE,
     CONSTRAINT "DMAS5_SERVICE_FK1" FOREIGN KEY ("RESOURCE_ID") REFERENCES "DGMARCU2"."DMAS5_RESOURCE" ("RESOURCE_ID") ON DELETE CASCADE ENABLE
   );



CREATE TABLE "DGMARCU2"."DMAS5_MATERIAL"
  (
    "RESOURCE_ID" NUMBER NOT NULL ENABLE,
    "MIN_UNIT_STOCK" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_MATERIAL_PK" PRIMARY KEY ("RESOURCE_ID") ENABLE,
    CONSTRAINT "DMAS5_MATERIAL_FK1" FOREIGN KEY ("RESOURCE_ID") REFERENCES "DGMARCU2"."DMAS5_RESOURCE" ("RESOURCE_ID") ON DELETE CASCADE ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_MATERIAL"."MIN_UNIT_STOCK" IS 'ASSUMING MATERIALS CAN HAVE A MINIMUM UNIT STOCK OF ZERO';




CREATE TABLE "DGMARCU2"."DMAS5_SOURCED_FROM"
  (
    "COST" FLOAT NOT NULL ENABLE,
    "RESTOCK_DT" DATE,
    "SUPPLIER_ID" NUMBER NOT NULL ENABLE,
    "MATERIAL_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_SOURCED_FROM_PK" PRIMARY KEY ("SUPPLIER_ID", "MATERIAL_ID") ENABLE,
    CONSTRAINT "DMAS5_SOURCED_FROM_FK1" FOREIGN KEY ("SUPPLIER_ID") REFERENCES "DGMARCU2"."DMAS5_SUPPLIER" ("SUPPLIER_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_SOURCED_FROM_FK2" FOREIGN KEY ("MATERIAL_ID") REFERENCES "DGMARCU2"."DMAS5_MATERIAL" ("RESOURCE_ID") ON DELETE CASCADE ENABLE
  );





CREATE TABLE "DGMARCU2"."DMAS5_RETURNS"
  (
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    "PROJECT_ID" NUMBER NOT NULL ENABLE,
    "MATERIAL_ID" NUMBER NOT NULL ENABLE,
    "RETURN_DT" DATE NOT NULL ENABLE,
    "REASON" VARCHAR2(500 BYTE),
    CONSTRAINT "DMAS5_RETURNS_PK" PRIMARY KEY ("PERSON_ID", "PROJECT_ID", "MATERIAL_ID") ENABLE,
    CONSTRAINT "DMAS5_RETURNS_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_PERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_RETURNS_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "DGMARCU2"."DMAS5_PROJECT" ("PROJECT_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_RETURNS_FK3" FOREIGN KEY ("MATERIAL_ID") REFERENCES "DGMARCU2"."DMAS5_MATERIAL" ("RESOURCE_ID") ON DELETE CASCADE ENABLE
  );



CREATE TABLE "DGMARCU2"."DMAS5_SKILLED_IN"
  (
    "PERSON_ID" NUMBER NOT NULL ENABLE,
    "SERVICE_ID" NUMBER NOT NULL ENABLE,
    "CERT_NM" VARCHAR2(400 BYTE) NOT NULL ENABLE,
    "CERT_DT" DATE NOT NULL ENABLE,
    CONSTRAINT "DMAS5_SKILLED_IN_PK" PRIMARY KEY ("PERSON_ID", "SERVICE_ID") ENABLE,
    CONSTRAINT "DMAS5_SKILLED_IN_FK1" FOREIGN KEY ("PERSON_ID") REFERENCES "DGMARCU2"."DMAS5_TRADESPERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_SKILLED_IN_FK2" FOREIGN KEY ("SERVICE_ID") REFERENCES "DGMARCU2"."DMAS5_SERVICE" ("RESOURCE_ID") ON DELETE CASCADE ENABLE
  );




CREATE TABLE "DGMARCU2"."DMAS5_JOB"
  (
    "JOB_ID" NUMBER NOT NULL ENABLE,
    "PROJECT_ID" NUMBER NOT NULL ENABLE,
    "ESTIMATED_COST" FLOAT,
    "ACTUAL_COST" FLOAT NOT NULL ENABLE,
    "START_DT" DATE NOT NULL ENABLE,
    "END_DT" DATE,
    CONSTRAINT "DMAS5_JOB_PK" PRIMARY KEY ("JOB_ID", "PROJECT_ID") ENABLE,
    CONSTRAINT "DMAS5_JOB_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "DGMARCU2"."DMAS5_PROJECT" ("PROJECT_ID") ON DELETE CASCADE ENABLE
  );
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_JOB"."ESTIMATED_COST" IS 'ASSUMING POSSIBILITY OF JOBS IN WHICH THE COST OF THE JOB WAS NOT ESTIMATED BEFORE JOB COMPLETION';
  COMMENT ON COLUMN "DGMARCU2"."DMAS5_JOB"."END_DT" IS 'ASSUMING POSSIBILITY OF JOBS BEING LEFT UNFINISHED OR WITHOUT A DEFINED END DATE';


  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."DMAS5_JOB_TRIG1"
   BEFORE INSERT ON DMAS5_JOB
   FOR EACH ROW
  DECLARE
  BEGIN
   IF( :NEW.JOB_ID IS NULL )
   THEN
    :NEW.JOB_ID := DMAS5_JOB_ID_SEQ.NEXTVAL;
   END IF;
  END;
  /
  ALTER TRIGGER "DGMARCU2"."DMAS5_JOB_TRIG1" ENABLE;




CREATE TABLE "DGMARCU2"."DMAS5_PERFORMS"
  (
    "TRADESPERSON_ID" NUMBER NOT NULL ENABLE,
    "PROJECT_ID" NUMBER NOT NULL ENABLE,
    "SERVICE_ID" NUMBER NOT NULL ENABLE,
    "JOB_ID" NUMBER NOT NULL ENABLE,
    CONSTRAINT "DMAS5_PERFORMS_PK" PRIMARY KEY ("TRADESPERSON_ID", "PROJECT_ID", "SERVICE_ID", "JOB_ID") ENABLE,
    CONSTRAINT "DMAS5_PERFORMS_FK1" FOREIGN KEY ("TRADESPERSON_ID") REFERENCES "DGMARCU2"."DMAS5_TRADESPERSON" ("PERSON_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_PERFORMS_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "DGMARCU2"."DMAS5_PROJECT" ("PROJECT_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_PERFORMS_FK3" FOREIGN KEY ("SERVICE_ID") REFERENCES "DGMARCU2"."DMAS5_SERVICE" ("RESOURCE_ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "DMAS5_PERFORMS_FK4" FOREIGN KEY ("JOB_ID", "PROJECT_ID") REFERENCES "DGMARCU2"."DMAS5_JOB" ("JOB_ID", "PROJECT_ID") ON DELETE CASCADE ENABLE
  );
